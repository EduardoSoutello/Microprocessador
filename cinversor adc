;****************************** Programa modelo ******************************
;*******                       Nome do programa                    ***********
;*****************************************************************************

;*********************  Definição do processador *****************************

	#include p16F877.inc 
	__config _HS_OSC & _WDT_OFF & _LVP_OFF & _PWRTE_ON 

;************************** Memória de programa ******************************
 ORG     0 

RESET 
 nop             
 goto   START 
;***************************** Interrupção **********************************
 ORG 4 
;*************************** Inicio do programa ******************************

START 

 bsf     STATUS,RP0  ;vai para o Bank 1
;*************************** Declaração de variáveis ******************************   
 DELAY 	 EQU 0x20
 VEZES 	 EQU 0x21
 ANVAL EQU 0x22 ; Valor analogico
 CNT0 EQU 0x23 ;contador no banco 00
 CNT1 EQU 0xA1 ;contador no banco 01 
;*************************** Configurações ******************************
 movlw   b'00000000' ; Seta PORTA como saída
 movwf   TRISA       
 movlw   b'00000000' ; Seta PORTD como saída
 movwf   TRISD       
 bcf   STATUS,RP0    ;vai para o Bank 0
;*************************** Programa principal ******************************
GOTO INICIO 

ADC_READ
 BCF STATUS, 5 ;SELECIONA BANCO 00
 BSF ADCON0, 2 ;COMECA O PROCESSO
ESPERA:
 BTFSC ADCON0, 2
 GOTO ESPERA ;ESPERA PELA CONVERSAO
;COMO A RESPOSTA E EM 10 BITS, OS 2 BITS MENOS SIGNIFICANTES SÃO DESCARTADOS
 MOVLW 0x06
 MOVWF CNT0
AGAIN_0:
 BCF STATUS, C ;ZERA O CARRY
 RLF ADRESH, 1 ;FAZ O SHIFT DE 6 PARA A ESQUERDA
 DECFSZ CNT0
 GOTO AGAIN_0
 MOVF ADRESH, W ;MOVE ADRESH PARA W
 MOVWF ANVAL ;MOVE W PARA ANVAL
 BSF STATUS, 5 ;SELECIONA BANCO 01
 MOVLW 0x02
 MOVWF CNT1
AGAIN_1:
 BCF STATUS, C ;ZERA O CARRY
 RRF ADRESL, 1 ;SHIFT 2 PARA A DIREITA OS DOIS BITS FALTANTES
 DECFSZ CNT1
 GOTO AGAIN_1 
 MOVF ADRESL, W ;MOVE ADRESL PARA W
 BCF STATUS, 5 ;SELECIONA BANCO 00
 ADDWF ANVAL, 1 ;ADD W PARA ANVAL
 RETURN 

 ADC_INIT
	BSF STATUS, 5 ;SELECIONA BANCO 01
	MOVLW B'10000000'
	MOVWF ADCON1
	BCF STATUS, 5 ;SELECIONA O BANCO 00
 	MOVLW B'10000001' ; 0X81
	MOVWF ADCON0
 	RETURN 

          
INICIO
	CALL ADC_INIT
	CALL ADC_READ
	CALL TESTE

  goto INICIO 

TESTE
	MOVLW b'00000001' ; COMPARANDO COM O PRIMEIRO VALOR
	SUBWF ANVAL,W
	BTFSC STATUS,Z
	CALL IGUAL1
	BTFSC STATUS,C; VERIFICA SE É MENOR QUE 1
	CALL MENOR1

	MOVLW b'00000011';COMPARAR COM O VALOR 3
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 3
	CALL IGUAL3
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 3
	CALL MENOR3

	MOVLW b'00000111';COMPARAR COM O VALOR 7
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 7
	CALL IGUAL7
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 7
	CALL MENOR7

	MOVLW b'00001111';COMPARAR COM O VALOR 15
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 15
	CALL IGUAL15
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 15
	CALL MENOR15
       
 	MOVLW b'00011111';COMPARAR COM O VALOR 31
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 31
	CALL IGUAL31
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 31
	CALL MENOR31
       
  	MOVLW b'00111111';COMPARAR COM O VALOR 63
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 63
	CALL IGUAL63
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 63
	CALL MENOR63

  	MOVLW b'01111111';COMPARAR COM O VALOR 127
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 127
	CALL IGUAL127
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 127
	CALL MENOR127

  	MOVLW b'11111111';COMPARAR COM O VALOR 255
	SUBWF ANVAL,W
	BTFSC STATUS,Z; VERIFICA SE É IGUAL A 255
	CALL IGUAL255
	BTFSC STATUS,C;VERIFICA SE É NEMOR QUE 255
	CALL MENOR255

RETURN

IGUAL1
MENOR1
	MOVLW 0X01
	MOVWF PORTD
	return
IGUAL3
MENOR3
	MOVLW 0X03
	MOVWF PORTD
	return
IGUAL7
MENOR7
	MOVLW 0X07
	MOVWF PORTD
	return
IGUAL15
MENOR15
	MOVLW 0X0F
	MOVWF PORTD
	return
IGUAL31
MENOR31
	MOVLW 0X1F
	MOVWF PORTD
	return
IGUAL63
MENOR63
	MOVLW 0X3F
	MOVWF PORTD
	return
IGUAL127
MENOR127
	MOVLW 0X7F
	MOVWF PORTD
	return
IGUAL255
MENOR255
	MOVLW 0XFF
	MOVWF PORTD
	return

       
 end
